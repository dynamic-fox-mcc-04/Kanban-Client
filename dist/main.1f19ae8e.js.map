{"version":3,"sources":["main.js"],"names":["baseUrl","app","Vue","el","data","userData","email","password","isLogin","loginForm","registForm","tasks","id","task","category","computed","methods","getHomePage","getRegistForm","getLoginForm","register","axios","method","url","then","access_token","localStorage","setItem","catch","err","console","log","response","errors","message","login","msg","logout","clear","readTask","headers","token","createTask","newTask","beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["const baseUrl = 'http://localhost:3000'\r\nvar app = new Vue ({\r\n    el: '#app',\r\n    data: {\r\n        userData: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        isLogin: false,\r\n        loginForm: false,\r\n        registForm: false,\r\n        tasks: [\r\n            {id: 1, task: \"This is kanban (backlog)\", category: 'backlog'},\r\n            {id: 2, task: \"This is kanban (todo)\", category: 'todo'},\r\n            {id: 3, task: \"This is kanban (done)\", category: 'done'},\r\n            {id: 4, task: \"This is kanban (completed)\", category: 'completed'},\r\n            {id: 5, task: \"This is kanban (backlog)\", category: 'backlog'},\r\n            {id: 6, task: \"This is kanban (done)\", category: 'done'},\r\n        ]\r\n    },\r\n    computed: {\r\n\r\n    },\r\n    methods: {\r\n        getHomePage(){\r\n            this.registForm = false,\r\n            this.loginForm = false\r\n        },\r\n\r\n        getRegistForm(){\r\n            this.registForm = true\r\n            this.loginForm = false\r\n        },\r\n\r\n        getLoginForm(){\r\n            this.loginForm = true\r\n            this.registForm = false\r\n        },\r\n\r\n        register(){\r\n            let email= this.userData.email\r\n            let password= this.userData.password\r\n\r\n            axios({\r\n                method: 'POST',\r\n                url: baseUrl + '/users/register',\r\n                data: { \r\n                    email,\r\n                    password\r\n                }\r\n            })\r\n                .then(({data})=> {\r\n                    const access_token = data.access_token\r\n                    localStorage.setItem('access_token', access_token)\r\n                    this.isLogin = true\r\n                    this.userData.email = ''\r\n                    this.userData.password = ''\r\n                })\r\n                .catch(err=> {\r\n                    console.log(err.response.data.errors[0].message);\r\n                })\r\n        },\r\n            \r\n\r\n        login(){\r\n            \r\n            let email= this.userData.email\r\n            let password= this.userData.password\r\n\r\n            axios({\r\n                method: 'POST',\r\n                url: baseUrl + '/users/login',\r\n                data: { \r\n                    email,\r\n                    password\r\n                }\r\n            })\r\n                .then(data => {\r\n                    const access_token = data.access_token\r\n                    localStorage.setItem('access_token', access_token)\r\n                    this.isLogin = true\r\n                    this.userData.email = ''\r\n                    this.userData.password = ''\r\n\r\n                })\r\n                .catch(err=> {\r\n                    console.log(err.response.data.msg);\r\n                })\r\n        },\r\n\r\n        logout(){\r\n            localStorage.clear()\r\n            this.isLogin = false\r\n        },\r\n\r\n        readTask (){\r\n            axios({\r\n                method: 'GET',\r\n                url: baseUrl + '/tasks',\r\n                headers: {\r\n                    access_token: localStorage.token\r\n                }\r\n            })\r\n            .then()\r\n            .catch()\r\n        },\r\n\r\n        createTask(){\r\n            axios({  \r\n                method: 'POST',\r\n                url: baseUrl + '/tasks',\r\n                headers: {\r\n                    access_token: localStorage.token\r\n                },\r\n                data: {\r\n                    newTask\r\n                }\r\n            })\r\n            .then()\r\n            .catch()\r\n\r\n        }\r\n\r\n    },\r\n    // Vue Lifecycle\r\n    beforeCreate(){\r\n        console.log('beforeCreate')\r\n    },\r\n    created(){\r\n        console.log('created')\r\n        if(localStorage.access_token){\r\n            this.isLogin = true\r\n        }\r\n    },\r\n    beforeMount(){\r\n        console.log('beforeMount')\r\n    },\r\n    mounted(){\r\n        console.log('mounted')\r\n    },\r\n    beforeUpdate(){\r\n        console.log('beforeUpdate')\r\n    },\r\n    updated(){\r\n        console.log('updated')\r\n    },\r\n    beforeDestroy(){\r\n        console.log('beforeDestroy')\r\n    },\r\n    destroyed(){\r\n        console.log('destroyed')\r\n    }\r\n})"]}